"use strict";var bgColor=16777215;THREE.SpriteCanvasMaterial=function(e){THREE.Material.call(this),this.type="SpriteCanvasMaterial",this.color=new THREE.Color(16777215),this.program=function(){},this.setValues(e)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.constructor=THREE.SpriteCanvasMaterial,THREE.SpriteCanvasMaterial.prototype.isSpriteCanvasMaterial=!0,THREE.SpriteCanvasMaterial.prototype.clone=function(){var e=new THREE.SpriteCanvasMaterial;return e.copy(this),e.color.copy(this.color),e.program=this.program,e},THREE.CanvasRenderer=function(e){function s(e,r,t){v(t.opacity),y(t.blending);var i=r.scale.x*J,o=r.scale.y*K,n=Math.sqrt(i*i+o*o);if(de.min.set(e.x-n,e.y-n),de.max.set(e.x+n,e.y+n),t.isSpriteMaterial){var a=t.map;if(null!==a){var s=ce[a.id];if(void 0!==s&&s.version===a.version||(s=M(a),ce[a.id]=s),void 0!==s.canvas){C(s.canvas);var l=a.image,c=l.width*a.offset.x,p=l.height*a.offset.y,E=l.width*a.repeat.x,d=l.height*a.repeat.y,f=i/E,h=o/d;$.save(),$.translate(e.x,e.y),0!==t.rotation&&$.rotate(t.rotation),$.translate(-i/2,-o/2),$.scale(f,h),$.translate(-c,-p),$.fillRect(c,p,E,d),$.restore()}}else C(t.color.getStyle()),$.save(),$.translate(e.x,e.y),0!==t.rotation&&$.rotate(t.rotation),$.scale(i,-o),$.fillRect(-.5,-.5,1,1),$.restore()}else t.isSpriteCanvasMaterial?(x(t.color.getStyle()),C(t.color.getStyle()),$.save(),$.translate(e.x,e.y),0!==t.rotation&&$.rotate(t.rotation),$.scale(i,o),t.program($),$.restore()):t.isPointsMaterial&&(C(t.color.getStyle()),$.save(),$.translate(e.x,e.y),0!==t.rotation&&$.rotate(t.rotation),$.scale(i*t.size,-o*t.size),$.fillRect(-.5,-.5,1,1),$.restore())}function l(e,r,t,i){if(v(i.opacity),y(i.blending),$.beginPath(),$.moveTo(e.positionScreen.x,e.positionScreen.y),$.lineTo(r.positionScreen.x,r.positionScreen.y),i.isLineBasicMaterial){if(E(i.linewidth),d(i.linecap),f(i.linejoin),i.vertexColors!==THREE.VertexColors)x(i.color.getStyle());else{var o=t.vertexColors[0].getStyle(),n=t.vertexColors[1].getStyle();if(o===n)x(o);else{try{var a=$.createLinearGradient(e.positionScreen.x,e.positionScreen.y,r.positionScreen.x,r.positionScreen.y);a.addColorStop(0,o),a.addColorStop(1,n)}catch(e){a=o}x(a)}}i.isLineDashedMaterial&&R([i.dashSize,i.gapSize]),$.stroke(),de.expandByScalar(2*i.linewidth),i.isLineDashedMaterial&&R([])}}function c(e,r,t,i,o,n,a,s){if(G.info.render.vertices+=3,G.info.render.faces++,v(s.opacity),y(s.blending),z=e.positionScreen.x,V=e.positionScreen.y,j=r.positionScreen.x,L=r.positionScreen.y,O=t.positionScreen.x,B=t.positionScreen.y,l=z,c=V,p=j,E=L,d=O,f=B,$.beginPath(),$.moveTo(l,c),$.lineTo(p,E),$.lineTo(d,f),$.closePath(),(s.isMeshLambertMaterial||s.isMeshPhongMaterial||s.isMeshStandardMaterial)&&null===s.map)ae.copy(s.color),se.copy(s.emissive),s.vertexColors===THREE.FaceColors&&ae.multiply(a.color),ne.copy(fe),ve.copy(e.positionWorld).add(r.positionWorld).add(t.positionWorld).divideScalar(3),function(e,r,t){for(var i=0,o=S.length;i<o;i++){var n=S[i];if(le.copy(n.color),n.isDirectionalLight){var a=me.setFromMatrixPosition(n.matrixWorld).normalize();if((s=r.dot(a))<=0)continue;s*=n.intensity,t.add(le.multiplyScalar(s))}else if(n.isPointLight){var s;if(a=me.setFromMatrixPosition(n.matrixWorld),(s=r.dot(me.subVectors(a,e).normalize()))<=0)continue;if(0==(s*=0==n.distance?1:1-Math.min(e.distanceTo(a)/n.distance,1)))continue;s*=n.intensity,t.add(le.multiplyScalar(s))}}}(ve,a.normalModel,ne),ne.multiply(ae).add(se),!0===s.wireframe?h(ne,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):u(ne);else if(s.isMeshBasicMaterial||s.isMeshLambertMaterial||s.isMeshPhongMaterial||s.isMeshStandardMaterial){if(null!==s.map)s.map.mapping===THREE.UVMapping&&(P=a.uvs,m(z,V,j,L,O,B,P[i].x,P[i].y,P[o].x,P[o].y,P[n].x,P[n].y,s.map));else null!==s.envMap?s.envMap.mapping===THREE.SphericalReflectionMapping&&(ye.copy(a.vertexNormalsModel[i]).applyMatrix3(xe),W=.5*ye.x+.5,N=.5*ye.y+.5,ye.copy(a.vertexNormalsModel[o]).applyMatrix3(xe),k=.5*ye.x+.5,A=.5*ye.y+.5,ye.copy(a.vertexNormalsModel[n]).applyMatrix3(xe),F=.5*ye.x+.5,D=.5*ye.y+.5,m(z,V,j,L,O,B,W,N,k,A,F,D,s.envMap)):(ne.copy(s.color),s.vertexColors===THREE.FaceColors&&ne.multiply(a.color),!0===s.wireframe?h(ne,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):u(ne))}else s.isMeshNormalMaterial?(ye.copy(a.normalModel).applyMatrix3(xe),ne.setRGB(ye.x,ye.y,ye.z).multiplyScalar(.5).addScalar(.5)):ne.setRGB(1,1,1),!0===s.wireframe?h(ne,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):u(ne);var l,c,p,E,d,f}function h(e,r,t,i){E(r),d(t),f(i),x(e.getStyle()),$.stroke(),de.expandByScalar(2*r)}function u(e){C(e.getStyle()),$.fill()}function M(e){if(0===e.version||e instanceof THREE.CompressedTexture||e instanceof THREE.DataTexture)return{canvas:void 0,version:e.version};var r=e.image;if(!1===r.complete)return{canvas:void 0,version:0};var t=e.wrapS===THREE.RepeatWrapping||e.wrapS===THREE.MirroredRepeatWrapping,i=e.wrapT===THREE.RepeatWrapping||e.wrapT===THREE.MirroredRepeatWrapping,o=e.wrapS===THREE.MirroredRepeatWrapping,n=e.wrapT===THREE.MirroredRepeatWrapping,a=document.createElement("canvas");a.width=r.width*(o?2:1),a.height=r.height*(n?2:1);var s=a.getContext("2d");s.setTransform(1,0,0,-1,0,r.height),s.drawImage(r,0,0),!0===o&&(s.setTransform(-1,0,0,-1,r.width,r.height),s.drawImage(r,-r.width,0)),!0===n&&(s.setTransform(1,0,0,1,0,0),s.drawImage(r,0,r.height)),!0===o&&!0===n&&(s.setTransform(-1,0,0,1,r.width,0),s.drawImage(r,-r.width,r.height));var l="no-repeat";!0===t&&!0===i?l="repeat":!0===t?l="repeat-x":!0===i&&(l="repeat-y");var c=$.createPattern(a,l);return e.onUpdate&&e.onUpdate(e),{canvas:c,version:e.version}}function m(e,r,t,i,o,n,a,s,l,c,p,E,d){var f=ce[d.id];if(void 0!==f&&f.version===d.version||(f=M(d),ce[d.id]=f),void 0===f.canvas)return C("rgba( 0, 0, 0, 1)"),void $.fill();C(f.canvas);var h,u,m,v,y,x,R,T,g=d.offset.x/d.repeat.x,S=d.offset.y/d.repeat.y,H=d.image.width*d.repeat.x,w=d.image.height*d.repeat.y;l=(l+g)*H,c=(c+S)*w,p=(p+g)*H,E=(E+S)*w,t-=e,i-=r,o-=e,n-=r,0!=(R=(l-=a=(a+g)*H)*(E-=s=(s+S)*w)-(p-=a)*(c-=s))&&(y=e-(h=(E*t-c*o)*(T=1/R))*a-(m=(l*o-p*t)*T)*s,x=r-(u=(E*i-c*n)*T)*a-(v=(l*n-p*i)*T)*s,$.save(),$.transform(h,u,m,v,y,x),$.fill(),$.restore())}function p(e,r,t){var i,o=r.x-e.x,n=r.y-e.y,a=o*o+n*n;0!==a&&(o*=i=t/Math.sqrt(a),n*=i,r.x+=o,r.y+=n,e.x-=o,e.y-=n)}function v(e){a!==e&&($.globalAlpha=e,a=e)}function y(e){_!==e&&(e===THREE.NormalBlending?$.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?$.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending?$.globalCompositeOperation="darker":e===THREE.MultiplyBlending&&($.globalCompositeOperation="multiply"),_=e)}function E(e){te!==e&&($.lineWidth=e,te=e)}function d(e){ie!==e&&($.lineCap=e,ie=e)}function f(e){oe!==e&&($.lineJoin=e,oe=e)}function x(e){ee!==e&&($.strokeStyle=e,ee=e)}function C(e){re!==e&&($.fillStyle=e,re=e)}function R(e){r.length!==e.length&&($.setLineDash(e),r=e)}console.log("THREE.CanvasRenderer",THREE.REVISION),e=e||{};var T,g,S,H,w,b,z,V,j,L,O,B,P,W,N,k,A,F,D,G=this,I=new THREE.Projector,i=void 0!==e.canvas?e.canvas:document.createElement("canvas"),U=i.width,q=i.height,J=Math.floor(U/2),K=Math.floor(q/2),Q=0,X=0,Y=U,Z=q,o=1,$=i.getContext("2d",{alpha:!0===e.alpha}),t=new THREE.Color(bgColor),n=!0===e.alpha?0:1,a=1,_=0,ee=null,re=null,te=null,ie=null,oe=null,r=[],ne=new THREE.Color,ae=new THREE.Color,se=new THREE.Color,le=new THREE.Color,ce={},pe=new THREE.Box2,Ee=new THREE.Box2,de=new THREE.Box2,fe=new THREE.Color,he=new THREE.Color,ue=new THREE.Color,me=new THREE.Vector3,ve=new THREE.Vector3,ye=new THREE.Vector3,xe=new THREE.Matrix3;void 0===$.setLineDash&&($.setLineDash=function(){}),this.domElement=i,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.getContext=function(){return $},this.getContextAttributes=function(){return $.getContextAttributes()},this.getPixelRatio=function(){return o},this.setPixelRatio=function(e){void 0!==e&&(o=e)},this.setSize=function(e,r,t){U=e*o,q=r*o,i.width=U,i.height=q,J=Math.floor(U/2),K=Math.floor(q/2),!1!==t&&(i.style.width=e+"px",i.style.height=r+"px"),pe.min.set(-J,-K),pe.max.set(J,K),Ee.min.set(-J,-K),Ee.max.set(J,K),a=1,_=0,oe=ie=te=re=ee=null,this.setViewport(0,0,e,r)},this.setViewport=function(e,r,t,i){Q=e*o,X=r*o,Y=t*o,Z=i*o},this.setScissor=function(){},this.setScissorTest=function(){},this.setClearColor=function(e,r){t.set(e),n=void 0!==r?r:1,Ee.min.set(-J,-K),Ee.max.set(J,K)},this.setClearColorHex=function(e,r){console.warn("THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,r)},this.getClearColor=function(){return t},this.getClearAlpha=function(){return n},this.getMaxAnisotropy=function(){return 0},this.clear=function(){!1===Ee.isEmpty()&&(Ee.intersect(pe),Ee.expandByScalar(2),Ee.min.x=Ee.min.x+J,Ee.min.y=-Ee.min.y+K,Ee.max.x=Ee.max.x+J,Ee.max.y=-Ee.max.y+K,n<1&&$.clearRect(0|Ee.min.x,0|Ee.max.y,Ee.max.x-Ee.min.x|0,Ee.min.y-Ee.max.y|0),0<n&&(v(1),y(THREE.NormalBlending),C("rgba("+Math.floor(255*t.r)+","+Math.floor(255*t.g)+","+Math.floor(255*t.b)+","+n+")"),$.fillRect(0|Ee.min.x,0|Ee.max.y,Ee.max.x-Ee.min.x|0,Ee.min.y-Ee.max.y|0)),Ee.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(e,r){if(void 0!==r.isCamera){var t=e.background;t&&t.isColor?(v(1),y(THREE.NormalBlending),C(t.getStyle()),$.fillRect(0,0,U,q)):!0===this.autoClear&&this.clear(),G.info.render.vertices=0,G.info.render.faces=0,$.setTransform(Y/U,0,0,-Z/q,Q,q-X),$.translate(J,K),T=I.projectScene(e,r,this.sortObjects,this.sortElements),g=T.elements,S=T.lights,xe.getNormalMatrix(r.matrixWorldInverse),function(){fe.setRGB(0,0,0),he.setRGB(0,0,0),ue.setRGB(0,0,0);for(var e=0,r=S.length;e<r;e++){var t=S[e],i=t.color;t.isAmbientLight?fe.add(i):t.isDirectionalLight?he.add(i):t.isPointLight&&ue.add(i)}}();for(var i=0,o=g.length;i<o;i++){var n=g[i],a=n.material;if(void 0!==a&&0!==a.opacity){if(de.makeEmpty(),n instanceof THREE.RenderableSprite)(H=n).x*=J,H.y*=K,s(H,n,a);else if(n instanceof THREE.RenderableLine)H=n.v1,w=n.v2,H.positionScreen.x*=J,H.positionScreen.y*=K,w.positionScreen.x*=J,w.positionScreen.y*=K,de.setFromPoints([H.positionScreen,w.positionScreen]),!0===pe.intersectsBox(de)&&l(H,w,n,a);else if(n instanceof THREE.RenderableFace){if(H=n.v1,w=n.v2,b=n.v3,H.positionScreen.z<-1||1<H.positionScreen.z)continue;if(w.positionScreen.z<-1||1<w.positionScreen.z)continue;if(b.positionScreen.z<-1||1<b.positionScreen.z)continue;H.positionScreen.x*=J,H.positionScreen.y*=K,w.positionScreen.x*=J,w.positionScreen.y*=K,b.positionScreen.x*=J,b.positionScreen.y*=K,0<a.overdraw&&(p(H.positionScreen,w.positionScreen,a.overdraw),p(w.positionScreen,b.positionScreen,a.overdraw),p(b.positionScreen,H.positionScreen,a.overdraw)),de.setFromPoints([H.positionScreen,w.positionScreen,b.positionScreen]),!0===pe.intersectsBox(de)&&c(H,w,b,0,1,2,n,a)}Ee.union(de)}}$.setTransform(1,0,0,1,0,0)}else console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.")}},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0,this.renderOrder=0},THREE.RenderableFace=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.color=new THREE.Color,this.material=null,this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],this.z=0,this.renderOrder=0},THREE.RenderableVertex=function(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0,this.renderOrder=0},THREE.RenderableSprite=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new THREE.Vector2,this.material=null,this.renderOrder=0},THREE.Projector=function(){function X(e){(r=function(){if(te!==i)return t[te++];var e=new THREE.RenderableObject;return t.push(e),i++,te++,e}()).id=e.id,r.object=e,de.setFromMatrixPosition(e.matrixWorld),de.applyMatrix4(ue),r.z=de.z,r.renderOrder=e.renderOrder,Ee.objects.push(r)}function Y(e,r,t){var i=1/e.w;e.z*=i,-1<=e.z&&e.z<=1&&((o=function(){if(le!==d)return E[le++];var e=new THREE.RenderableSprite;return E.push(e),d++,le++,e}()).id=r.id,o.x=e.x*i,o.y=e.y*i,o.z=e.z,o.renderOrder=r.renderOrder,o.object=r,o.rotation=r.rotation,o.scale.x=r.scale.x*Math.abs(o.x-(e.x+t.projectionMatrix.elements[0])/(e.w+t.projectionMatrix.elements[12])),o.scale.y=r.scale.y*Math.abs(o.y-(e.y+t.projectionMatrix.elements[5])/(e.w+t.projectionMatrix.elements[13])),o.material=r.material,Ee.elements.push(o))}function Z(){if(ie!==a)return pe[ie++];var e=new THREE.RenderableVertex;return pe.push(e),a++,ie++,e}function $(){if(ne!==l)return s[ne++];var e=new THREE.RenderableFace;return s.push(e),l++,ne++,e}function _(){if(se!==p)return c[se++];var e=new THREE.RenderableLine;return c.push(e),p++,se++,e}function ee(e,r){return e.renderOrder!==r.renderOrder?e.renderOrder-r.renderOrder:e.z!==r.z?r.z-e.z:e.id!==r.id?e.id-r.id:0}function re(e,r){var t=0,i=1,o=e.z+e.w,n=r.z+r.w,a=-e.z+e.w,s=-r.z+r.w;return 0<=o&&0<=n&&0<=a&&0<=s||!(o<0&&n<0||a<0&&s<0)&&(o<0?t=Math.max(t,o/(o-n)):n<0&&(i=Math.min(i,o/(o-n))),a<0?t=Math.max(t,a/(a-s)):s<0&&(i=Math.min(i,a/(a-s))),!(i<t||(e.lerp(r,t),r.lerp(e,1-i),0)))}var r,te,n,ie,oe,ne,ae,se,o,le,ce,t=[],i=0,pe=[],a=0,s=[],l=0,c=[],p=0,E=[],d=0,Ee={objects:[],lights:[],elements:[]},de=new THREE.Vector3,fe=new THREE.Vector4,u=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),m=new THREE.Box3,v=new Array(3),he=new THREE.Matrix4,ue=new THREE.Matrix4,me=new THREE.Matrix4,ve=new THREE.Matrix3,ye=new THREE.Frustum,xe=new THREE.Vector4,Re=new THREE.Vector4;this.projectVector=function(e,r){console.warn("THREE.Projector: .projectVector() is now vector.project()."),e.project(r)},this.unprojectVector=function(e,r){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),e.unproject(r)},this.pickingRay=function(){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")};var Te=new function(){function i(e){var r=e.position,t=e.positionWorld,i=e.positionScreen;t.copy(r).applyMatrix4(ce),i.copy(t).applyMatrix4(ue);var o=1/i.w;i.x*=o,i.y*=o,i.z*=o,e.visible=-1<=i.x&&i.x<=1&&-1<=i.y&&i.y<=1&&-1<=i.z&&i.z<=1}function l(e,r,t){return!0===e.visible||!0===r.visible||!0===t.visible||(v[0]=e.positionScreen,v[1]=r.positionScreen,v[2]=t.positionScreen,u.intersectsBox(m.setFromPoints(v)))}function c(e,r,t){return(t.positionScreen.x-e.positionScreen.x)*(r.positionScreen.y-e.positionScreen.y)-(t.positionScreen.y-e.positionScreen.y)*(r.positionScreen.x-e.positionScreen.x)<0}var p=[],o=[],E=[],d=null,f=null,h=new THREE.Matrix3;return{setObject:function(e){f=(d=e).material,h.getNormalMatrix(d.matrixWorld),p.length=0,o.length=0,E.length=0},projectVertex:i,checkTriangleVisibility:l,checkBackfaceCulling:c,pushVertex:function(e,r,t){(n=Z()).position.set(e,r,t),i(n)},pushNormal:function(e,r,t){p.push(e,r,t)},pushColor:function(e,r,t){o.push(e,r,t)},pushUv:function(e,r){E.push(e,r)},pushLine:function(e,r){var t=pe[e],i=pe[r];t.positionScreen.copy(t.position).applyMatrix4(me),i.positionScreen.copy(i.position).applyMatrix4(me),!0===re(t.positionScreen,i.positionScreen)&&(t.positionScreen.multiplyScalar(1/t.positionScreen.w),i.positionScreen.multiplyScalar(1/i.positionScreen.w),(ae=_()).id=d.id,ae.v1.copy(t),ae.v2.copy(i),ae.z=Math.max(t.positionScreen.z,i.positionScreen.z),ae.renderOrder=d.renderOrder,ae.material=d.material,d.material.vertexColors===THREE.VertexColors&&(ae.vertexColors[0].fromArray(o,3*e),ae.vertexColors[1].fromArray(o,3*r)),Ee.elements.push(ae))},pushTriangle:function(e,r,t){var i=pe[e],o=pe[r],n=pe[t];if(!1!==l(i,o,n)&&(f.side===THREE.DoubleSide||!0===c(i,o,n))){(oe=$()).id=d.id,oe.v1.copy(i),oe.v2.copy(o),oe.v3.copy(n),oe.z=(i.positionScreen.z+o.positionScreen.z+n.positionScreen.z)/3,oe.renderOrder=d.renderOrder,oe.normalModel.fromArray(p,3*e),oe.normalModel.applyMatrix3(h).normalize();for(var a=0;a<3;a++){var s=oe.vertexNormalsModel[a];s.fromArray(p,3*arguments[a]),s.applyMatrix3(h).normalize(),oe.uvs[a].fromArray(E,2*arguments[a])}oe.vertexNormalsLength=3,oe.material=d.material,Ee.elements.push(oe)}}}};this.projectScene=function(e,r,t,i){le=se=ne=0,!(Ee.elements.length=0)===e.autoUpdate&&e.updateMatrixWorld(),null===r.parent&&r.updateMatrixWorld(),he.copy(r.matrixWorldInverse),ue.multiplyMatrices(r.projectionMatrix,he),ye.setFromMatrix(ue),te=0,Ee.objects.length=0,Ee.lights.length=0,function e(r){if(!1!==r.visible){if(r instanceof THREE.Light)Ee.lights.push(r);else if(r instanceof THREE.Mesh||r instanceof THREE.Line||r instanceof THREE.Points){if(!1===r.material.visible)return;if(!0===r.frustumCulled&&!1===ye.intersectsObject(r))return;X(r)}else if(r instanceof THREE.Sprite){if(!1===r.material.visible)return;if(!0===r.frustumCulled&&!1===ye.intersectsSprite(r))return;X(r)}for(var t=r.children,i=0,o=t.length;i<o;i++)e(t[i])}}(e),!0===t&&Ee.objects.sort(ee);for(var o=Ee.objects,n=0,a=o.length;n<a;n++){var s=o[n].object,l=s.geometry;if(Te.setObject(s),ce=s.matrixWorld,ie=0,s instanceof THREE.Mesh){if(l instanceof THREE.BufferGeometry){var c=l.attributes,p=l.groups;if(void 0===c.position)continue;for(var E=0,d=(Q=c.position.array).length;E<d;E+=3)Te.pushVertex(Q[E],Q[E+1],Q[E+2]);if(void 0!==c.normal){var f=c.normal.array;for(E=0,d=f.length;E<d;E+=3)Te.pushNormal(f[E],f[E+1],f[E+2])}if(void 0!==c.uv){var h=c.uv.array;for(E=0,d=h.length;E<d;E+=2)Te.pushUv(h[E],h[E+1])}if(null!==l.index){var u=l.index.array;if(0<p.length)for(var m=0;m<p.length;m++){var v=p[m];for(E=v.start,d=v.start+v.count;E<d;E+=3)Te.pushTriangle(u[E],u[E+1],u[E+2])}else for(E=0,d=u.length;E<d;E+=3)Te.pushTriangle(u[E],u[E+1],u[E+2])}else for(E=0,d=Q.length/3;E<d;E+=3)Te.pushTriangle(E,E+1,E+2)}else if(l instanceof THREE.Geometry){var y=l.vertices,x=l.faces,R=l.faceVertexUvs[0];ve.getNormalMatrix(ce);for(var T=s.material,g=Array.isArray(T),S=0,H=y.length;S<H;S++){var w=y[S];if(de.copy(w),!0===T.morphTargets)for(var M=l.morphTargets,C=s.morphTargetInfluences,b=0,z=M.length;b<z;b++){var V=C[b];if(0!==V){var j=M[b].vertices[S];de.x+=(j.x-w.x)*V,de.y+=(j.y-w.y)*V,de.z+=(j.z-w.z)*V}}Te.pushVertex(de.x,de.y,de.z)}for(var L=0,O=x.length;L<O;L++){var B=x[L];if(void 0!==(T=!0===g?s.material[B.materialIndex]:s.material)){var P=T.side,W=pe[B.a],N=pe[B.b],k=pe[B.c];if(!1!==Te.checkTriangleVisibility(W,N,k)){var A=Te.checkBackfaceCulling(W,N,k);if(P!==THREE.DoubleSide){if(P===THREE.FrontSide&&!1===A)continue;if(P===THREE.BackSide&&!0===A)continue}(oe=$()).id=s.id,oe.v1.copy(W),oe.v2.copy(N),oe.v3.copy(k),oe.normalModel.copy(B.normal),!1!==A||P!==THREE.BackSide&&P!==THREE.DoubleSide||oe.normalModel.negate(),oe.normalModel.applyMatrix3(ve).normalize();for(var F=B.vertexNormals,D=0,G=Math.min(F.length,3);D<G;D++){var I=oe.vertexNormalsModel[D];I.copy(F[D]),!1!==A||P!==THREE.BackSide&&P!==THREE.DoubleSide||I.negate(),I.applyMatrix3(ve).normalize()}oe.vertexNormalsLength=F.length;var U=R[L];if(void 0!==U)for(var q=0;q<3;q++)oe.uvs[q].copy(U[q]);oe.color=B.color,oe.material=T,oe.z=(W.positionScreen.z+N.positionScreen.z+k.positionScreen.z)/3,oe.renderOrder=s.renderOrder,Ee.elements.push(oe)}}}}}else if(s instanceof THREE.Line){if(me.multiplyMatrices(ue,ce),l instanceof THREE.BufferGeometry){if(void 0!==(c=l.attributes).position){for(E=0,d=(Q=c.position.array).length;E<d;E+=3)Te.pushVertex(Q[E],Q[E+1],Q[E+2]);if(void 0!==c.color){var J=c.color.array;for(E=0,d=J.length;E<d;E+=3)Te.pushColor(J[E],J[E+1],J[E+2])}if(null!==l.index)for(E=0,d=(u=l.index.array).length;E<d;E+=2)Te.pushLine(u[E],u[E+1]);else{var K=s instanceof THREE.LineSegments?2:1;for(E=0,d=Q.length/3-1;E<d;E+=K)Te.pushLine(E,E+1)}}}else if(l instanceof THREE.Geometry){if(0===(y=s.geometry.vertices).length)continue;(W=Z()).positionScreen.copy(y[0]).applyMatrix4(me);for(K=s instanceof THREE.LineSegments?2:1,S=1,H=y.length;S<H;S++)(W=Z()).positionScreen.copy(y[S]).applyMatrix4(me),0<(S+1)%K||(N=pe[ie-2],xe.copy(W.positionScreen),Re.copy(N.positionScreen),!0===re(xe,Re)&&(xe.multiplyScalar(1/xe.w),Re.multiplyScalar(1/Re.w),(ae=_()).id=s.id,ae.v1.positionScreen.copy(xe),ae.v2.positionScreen.copy(Re),ae.z=Math.max(xe.z,Re.z),ae.renderOrder=s.renderOrder,ae.material=s.material,s.material.vertexColors===THREE.VertexColors&&(ae.vertexColors[0].copy(s.geometry.colors[S]),ae.vertexColors[1].copy(s.geometry.colors[S-1])),Ee.elements.push(ae)))}}else if(s instanceof THREE.Points){if(me.multiplyMatrices(ue,ce),l instanceof THREE.Geometry)for(S=0,H=(y=s.geometry.vertices).length;S<H;S++){w=y[S];fe.set(w.x,w.y,w.z,1),fe.applyMatrix4(me),Y(fe,s,r)}else if(l instanceof THREE.BufferGeometry){if(void 0!==(c=l.attributes).position){var Q;for(E=0,d=(Q=c.position.array).length;E<d;E+=3)fe.set(Q[E],Q[E+1],Q[E+2],1),fe.applyMatrix4(me),Y(fe,s,r)}}}else s instanceof THREE.Sprite&&(fe.set(ce.elements[12],ce.elements[13],ce.elements[14],1),fe.applyMatrix4(ue),Y(fe,s,r))}return!0===i&&Ee.elements.sort(ee),Ee}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
