{"version":3,"sources":["js/global.js"],"names":["xhr","reqContent","url","options","arguments","length","undefined","callback","Promise","resolve","reject","type","contentType","open","XMLHttpRequest","JSON","stringify","send","setRequestHeader","onreadystatechange","this","responseText","String","status","startsWith","err","readyState","res","console","error","window","YTapiKey","Video","then","result","log","items","i","snippet","resourceId","videoId","img","thumbnails","standard","item","document","querySelector","setAttribute","title","classList","remove","add","Error","high","Lacuna","tracks","permalink_url","artwork_url","replace","GitHub","body","headers","Authorization","fetch","method","token","response","repoWebsite","json","data","catch","repos","user","pinnedRepositories","edges","repo","node","description","homepageUrl","name","repoUrl","hideAllPopups","iconsWithPopups","innerHTML","target","contains","e","icon","parentNode","selection","getSelection","range","querySelectorAll","createRange","popup","selectNodeContents","removeAllRanges","addRange"],"mappings":"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","file":"global.js","sourcesContent":["function xhr (reqContent, url, options = {}, callback) {\n  return new Promise((resolve, reject) => {\n    if (typeof options === 'function') callback = options\n    if (typeof options === 'function') options = {}\n    if (options.type == undefined) options.type = 'POST'\n    if (options.contentType == undefined) options.contentType = 'json'\n    var xhr = new XMLHttpRequest()\n    xhr.open(options.type, url, true)\n    if (options.type == 'GET') {\n      xhr.send()\n    } else if (options.contentType == 'form') {\n      xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded')\n      xhr.send('data=' + JSON.stringify(reqContent))\n    } else if (options.contentType == 'json') {\n      xhr.setRequestHeader('Content-type', 'application/json')\n      xhr.send(JSON.stringify(reqContent))\n    } else if (options.contentType == 'none') {\n      xhr.send(reqContent)\n      // for file uploads (multipart/form-data)\n    } else if (options.contentType) {\n      xhr.setRequestHeader('Content-type', options.contentType)\n      xhr.send(reqContent)\n    }\n    xhr.onreadystatechange = function () {\n      if (this.readyState == 4) {\n        let res = JSON.parse(this.responseText)\n        let err = null\n        if (!String(this.status).startsWith('2')) {\n          console.error('HTTP error ' + this.status)\n          err = this.status\n        }\n        if (err) reject(err)\n        else resolve(res)\n        if (callback) callback(res, err)\n      }\n    }\n    // resolve(5);\n  })\n}\nwindow.xhr = xhr\n\nvar YTapiKey = 'AIzaSyBnQnpboWUfWyR8aW6HuQV5MAlxZ5FQ090';\n\n(function Video () {\n  var maxResults = 6\n\n  var url = 'https://www.googleapis.com/youtube/v3/playlistItems' +\n    '?key=' + YTapiKey +\n    '&part=snippet' +\n    '&maxResults=' + maxResults +\n    '&playlistId='\n  var myWork = xhr(null, url + 'PL84-DNDSU8p5WP6jA7hvOCV9dIKBNjdCS', { type: 'GET' })\n  myWork.then((result) => {\n    console.log('==--==--==--> YouTube Video')\n    console.log(result)\n    var items = result.items\n    for (var i = 0; i < items.length; i++) {\n      var url = items[i].snippet.resourceId.videoId\n      // var img = items[i].snippet.thumbnails.high.url\n      var img = items[i].snippet.thumbnails.standard.url\n      // var img = items[i].snippet.thumbnails.maxres.url\n      var item = document.querySelector('section.video .thumbnails a.item:nth-child(' + (i + 1) + ')')\n      item.setAttribute('href', 'https://www.youtube.com/watch?v=' + url)\n      item.querySelector('img').setAttribute('src', img)\n      item.title = items[i].snippet.title // hover title\n    }\n    document.querySelector('section.video').classList.remove('hidden')\n  }, (err) => {\n    document.querySelector('section.video').classList.add('removed')\n    console.log('Could not fetch Video YouTube playlistItems')\n    throw Error(err)\n  })\n})();\n\n(function Synctan () {\n  var maxResults = 6\n\n  var url = 'https://www.googleapis.com/youtube/v3/playlistItems' +\n    '?key=' + YTapiKey +\n    '&part=snippet' +\n    '&maxResults=' + maxResults +\n    '&playlistId=UUoMimPRPeR28TM3_0cinjVQ'\n  xhr(null, url, { type: 'GET' }).then((result) => {\n    console.log('==--==--==-->YouTube Synctan')\n    console.log(result)\n    var items = result.items\n    for (var i = 0; i < items.length; i++) {\n      var url = items[i].snippet.resourceId.videoId\n      var img = items[i].snippet.thumbnails.high.url\n      var item = document.querySelector('section.synctan .thumbnails .item:nth-child(' + (i + 1) + ')')\n      item.setAttribute('href', 'https://www.youtube.com/watch?v=' + url)\n      item.querySelector('img').setAttribute('src', img)\n      item.title = items[i].snippet.title // hover title\n    }\n    document.querySelector('section.synctan').classList.remove('hidden')\n  }, (err) => {\n    document.querySelector('section.synctan').classList.add('removed')\n    console.log('Could not fetch Synctan YouTube playlistItems')\n    throw Error(err)\n  })\n})();\n\n(function Lacuna () {\n  var maxResults = 8\n  \n  // Lacuna\n  var clientID = '6ibYZTmF5qnpvp88S9V3werVrC18WCdC'\n  var url = 'https://api.soundcloud.com/users/247370320/tracks' +\n  '?limit=' + maxResults +\n  '&client_id=' + clientID\n  xhr(null, url, { type: 'GET' }).then((tracks) => {\n    console.log('==--==--==--> SoundCloud Lacuna')\n    console.log(tracks)\n    for (var i = 0; i < 6; i++) {\n      var url = tracks[i].permalink_url\n      var img = tracks[i].artwork_url.replace('large', 't500x500')\n      var item = document.querySelector('section.lacuna .thumbnails .item:nth-child(' + (i + 1) + ')')\n      item.setAttribute('href', url)\n      item.querySelector('img').setAttribute('src', img)\n      item.title = tracks[i].title // hover title\n    }\n    document.querySelector('section.lacuna').classList.remove('hidden')\n  }, (err) => {\n    document.querySelector('section.lacuna').classList.add('removed')\n    console.log('Could not fetch SoundCloud tracks')\n    throw Error(err)\n  })\n})();\n\n(function GitHub () {\n  // this is so babel won't combine the two string into one, and\n  // make GitHub revoke the token when it detects it in the commit\n  let token = '510127accaf075e7a33b'\n  if (true) token += '04e4569c7e2f78c83539'\n  fetch('https://api.github.com/graphql', {\n    body: JSON.stringify({\n      query: `\n          query {\n              user(login:\"SpectralKH\") {\n              pinnedRepositories(first:6) {\n                  edges {\n                  node {\n                      description\n                      homepageUrl\n                      url\n                      name\n                  }\n                  }\n              }\n              }\n          }\n      `\n    }),\n    headers: {\n      Authorization: 'bearer ' + token,\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    method: 'POST'\n  })\n    .then((response) => {\n      if (response.ok) return response\n      else throw Error(response)\n    })\n    .then((response) => {\n      response.json().then((result) => {\n        console.log('==--==--==--> GitHub')\n        console.log(result.data)\n        const repos = result.data.user.pinnedRepositories.edges\n        for (var i = 0; i < repos.length; i++) {\n          const repo = repos[i].node\n          const description = repo.description\n          const repoWebsite = repo.homepageUrl\n          const name = repo.name\n          const repoUrl = repo.url\n          // const img = tracks[i].artwork_url.replace('large', 't300x300')\n          const item = document.querySelector('section.github .cards .item:nth-child(' + (i + 1) + ')')\n          // item.setAttribute('href', url)\n          item.classList.remove('hidden')\n          item.querySelector('p.title').innerHTML = name\n          item.querySelector('p.description').innerHTML = description\n          if (repoUrl) {\n            item.querySelector('a.repo-url').setAttribute('href', repoUrl)\n            item.querySelector('a.repo-url').classList.remove('hidden')\n          }\n          if (repoWebsite) {\n            item.querySelector('a.repo-website').setAttribute('href', repoWebsite)\n            item.querySelector('a.repo-website').classList.remove('hidden')\n          }\n        }\n        document.querySelector('section.github').classList.remove('hidden')\n      })\n    })\n    .catch((err) => {\n      document.querySelector('section.github').classList.add('removed')\n      throw err\n    })\n})()\n\n// discord/email popups\ndocument.addEventListener('click', function (e) {\n  function hideAllPopups () {\n    var iconsWithPopups = document.querySelectorAll('a.has-popup')\n    for (var i = 0; i < iconsWithPopups.length; i++) {\n      iconsWithPopups[i].classList.add('popup-hidden')\n    }\n  }\n\n  if (e.target.classList.contains('has-popup')) {\n    var icon = e.target\n  } else if (e.target.parentNode.classList.contains('has-popup')) {\n    var icon = e.target.parentNode\n  } else {\n    hideAllPopups()\n    return\n  }\n\n  if (icon.classList.contains('popup-hidden')) { // if popup is hidden\n    hideAllPopups()\n\n    // select\n    const range = document.createRange()\n    const popup = icon.querySelector('.popup')\n    range.selectNodeContents(popup)\n    const selection = window.getSelection()\n    selection.removeAllRanges()\n    selection.addRange(range)\n    \n    icon.classList.remove('popup-hidden')\n    \n  } else if (!e.target.classList.contains('popup')) { // if popup wasn't clicked\n  \n    icon.classList.add('popup-hidden')\n\n  }\n\n})\n"]}