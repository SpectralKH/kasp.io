{"version":3,"sources":["js/global new xhr.js"],"names":["xhr","reqContent","url","options","arguments","length","undefined","callback","Promise","resolve","reject","type","contentType","open","XMLHttpRequest","JSON","stringify","send","setRequestHeader","onreadystatechange","this","responseText","String","status","startsWith","err","readyState","res","console","error","window","YTapiKey","Video","commissionsURL","personal","commissions","all","then","results","log","items","concat","sort","a","b","dateA","Date","snippet","publishedAt","splice","i","resourceId","videoId","img","thumbnails","high","item","title","document","querySelector","setAttribute","classList","remove","add","Error","Lacuna","tracks","permalink_url","artwork_url","replace","GitHub","xxxhr","method","_ref","headers","json","req","hasOwnProperty","headerKey","addEventListener","e","inputs","hasClassPopup","target","contains","hasClassHasPopup","clickedInput","inputIsHidden","input","hideAllInputs"],"mappings":"aAAA,SAASA,IAAKC,EAAYC,GAA6B,IAAxBC,EAAwB,EAAAC,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,GAAIG,EAAUH,UAAA,GACrD,OAAO,IAAII,QAAQ,SAACC,EAASC,GADLR,mBAAZD,IAAyCM,EAAAJ,GAAA,mBAAAA,IAAAA,EAAA,IAAAG,MAAVC,EAAUI,OAAAR,EAAAQ,KAAA,QAKxBL,MAAvBH,EAAQS,cAA0BT,EAAQS,YAAc,QAJ9D,IAAAZ,EAAWQ,IAAAA,eACTR,EAAIa,KAAAV,EAAOA,KAAYD,GAAA,GACnB,OAAAC,EAAOA,KACXH,EAAIG,OACuBG,QAAvBH,EAAQS,aACZZ,EAAIA,iBAAUc,eAAd,qCACAd,EAAIa,KAAKV,QAATY,KAAAC,UAAAf,KAC2B,QAAvBE,EAAAS,aACFZ,EAAIiB,iBAAJ,eAAA,oBADFjB,EAAAiB,KAEWd,KAAAA,UAAQS,KACI,QAAjBM,EAAAA,YACJlB,EAAIiB,KAAKhB,GAELiB,EAAAA,cACJlB,EAAIiB,iBAAUD,eAAdb,EAAAS,aAFKZ,EAAAiB,KAGId,IAETH,EAAAmB,mBAAA,WAFK,GAGYP,GAHZQ,KAGIjB,WAAQS,CACjBZ,IAAIkB,EAAAA,KAAAA,MAAiBE,KAAAC,cACjBJ,EAAKhB,KACVqB,OAAAF,KAAAG,QAAAC,WAAA,OACGL,QAAAA,MAAAA,cAAqBC,KAAYG,QAC/BE,EAAKC,KAAAA,QAEHD,EAAAA,EAAJA,GACKH,EAAOK,GACVC,GAAQC,EAAMF,EAAAF,OAOnBK,OAZD9B,IAAAA,IAcD,IApCD+B,SAAA,2CAsCFD,WAKE,IAEI5B,EAAM,2DAHF8B,SACR,yCAQIC,EAAiB/B,EAAM,qCACvBgC,EAAWlC,IAAI,KAFDE,EAAM,2BAEc,CAAES,KAAM,QAC1CwB,EAAcnC,IAAI,KAAMiC,EAAgB,CAAEtB,KAAM,QACpDH,QAAQ4B,IAAI,CAACF,EAAUC,IAAcE,KAAK,SAAAC,GACxCV,QAAQW,IAAI,mDACZX,QAAQW,IAAID,GAEZ,IAAIE,EAAQF,EAAQ,GAAGE,MAAMC,OAAOH,EAAQ,GAAGE,OAC/CA,EAAME,KAAK,SAAUC,EAAGC,GACtB,IAAIC,EAAQ,IAAIC,KAAKH,EAAEI,QAAQC,aAE/B,OADY,IAAIF,KAAKF,EAAEG,QAAQC,aAChBH,IAEjBL,EAAQA,EAAMS,OAAO,EArBN,GAsBf,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAMnC,OAAQ6C,IAAK,CACrC,IAAIhD,EAAMsC,EAAMU,GAAGH,QAAQI,WAAWC,QAClCC,EAAMb,EAAMU,GAAGH,QAAQO,WAAWC,KAAKrD,IAEvCsD,GADQhB,EAAMU,GAAGH,QAAQU,MAClBC,SAASC,cAAc,+CAAiDT,EAAI,GAAK,MAC5FM,EAAKI,aAAa,OAAQ,mCAAqC1D,GAC/DsD,EAAKG,cAAc,OAAOC,aAAa,MAAOP,GAEhDK,SAASC,cAAc,iBAAiBE,UAAUC,OAAO,WACxD,SAAArC,GAGD,MAFAiC,SAASC,cAAc,iBAAiBE,UAAUE,IAAI,WACtDnC,QAAQW,IAAI,+CACNyB,MAAMvC,KAvChBK,GAuDI9B,IAAA,KATQ,2DAKAE,SACR0B,iEAGa,CAAbjB,KAAoB6B,QAAMnC,KAAQ6C,SAAAA,GAChCtB,QAAI1B,IAAMsC,mCACVZ,QAAIyB,IAAMb,GAEV,IADA,IAAAA,EAAIiB,EAAQjB,MACRgB,EAAOE,EAAAA,EAAAA,EAASC,OAAAA,IAAc,CAClCH,IAAAA,EAAKI,EAAAA,GAAab,QAAQI,WAAAC,QAC1BI,EAAKG,EAAAA,GAAcZ,QAAOa,WAA1BL,KAAuCrD,IAEzCwD,GADClB,EAAAU,GAAAH,QAAAU,MACQE,SAATA,cAAuB,gDAAvBT,EAAA,GAAA,MACCM,EAAAI,aAAS,OAAA,mCAAA1D,GACVwD,EAAAA,cAASC,OAAcC,aAAvB,MAA0CC,GAE1CH,SAAMM,cAAN,mBAAAH,UAAAC,OAAA,WAhBF,SAAArC,GAoBD,MA5BDiC,SAAAC,cAAA,mBAAAE,UAAAE,IAAA,WAuBInC,QAAQW,IAAI,iDAKN0B,MAATxC,KAcKzB,IAAA,KAHG,uGAGQ0D,CAAAA,KAAAA,QAASC,KAAT,SAAuBO,GAClCV,QAAKI,IAAAA,sCACLJ,QAAKG,IAAAA,GACN,IAAA,IAAAT,EAAA,EAAAA,EAAA,EAAAA,IAAA,CACDQ,IAAAA,EAASC,EAAAA,GAATQ,cACCd,EAAC5B,EAAQyB,GAAAkB,YAAAC,QAAA,QAAA,YACVX,EAASC,SAATA,cAAuB,+CAAvBT,EAAA,GAAA,KACAtB,EAAAA,aAAY,OAAA1B,GACZsD,EAAMQ,cAAN,OAAAJ,aAAA,MAAAP,GAtBJK,SAAAC,cAAA,kBAAAE,UAAAC,OAAA,WAmBK,SAACrC,GAQ2C,MADhDiC,SAASY,cAAU,kBAAAT,UAAAE,IAAA,WAClBnC,QAAS2C,IAAT,qCAAiBC,MAA8B/C,KAkE/CK,OAAAyC,MAjEE,SAAAE,GAAA,IAAgB3D,EAAhB2D,EAAgB3D,OAAAA,EAAhB2D,EAAgB3D,IAAJ4D,EAAZD,EAAYC,QAAZC,EAAAF,EAAAE,KACI9D,EAAK2D,IAAT1D,eAEE,GADF8D,EAAIF,KAAAA,EAASxE,GAAA,GACXwE,EACE,IAAA,IAAIA,KAAQG,EACVD,EAAI1D,eAAiB4D,IACtBF,EAAA1D,iBAAA4D,EAAAJ,EAAAI,IAIHF,IACAA,EAAI3D,iBAAUD,eAAd,oBACD4D,EAAA3D,KAAAF,KAAAC,UAAA2D,KAEC3E,IAAAmB,mBAAI,WACF,GAAuB,IAAvBC,KAAMO,WAAiB,CACvB,IAAIL,EAAOP,KAAKQ,MAAZH,KAAoBI,cACtBF,OAAIf,KAAUA,QAAAA,WAAA,KADhBA,UAEOA,SAAA,KAAAoB,GAENpB,UAAAA,SAAAa,KAAAG,OAAAI,MAkHP+B,SAAAqB,iBAAA,QAA0B,SAAAC,GACxB,SAAIC,IAEFA,IADF,IAAAA,EAAavB,SAAOuB,iBAApB,qBACS/B,EAAGW,EAAAA,EAAAA,EAAcxD,OAAxB6C,IACD+B,EAAA/B,GAAAW,UAAAE,IAAA,UAGH,IAAImB,EAAkBC,EAAAA,OAAOtB,UAAUuB,SAAS,aAC5CC,EAAAA,EAAAA,OAAoBH,UAAeE,SAAA,SACrC,GAAAC,GAAqB1B,EAAc,CACnC,IAAIqB,EAAAA,EAASnB,OAAAA,cAAmB,SAC5ByB,EAAAA,OAAAA,UAAiBH,SAAOtB,WAAUuB,EAASJ,EAAAG,QAC/C,IAAII,EAAAA,EAAgBC,OAAM3B,UAAUuB,SAAS,SAC1BI,EAAA3B,UAAAuB,SAAA,WAEjBI,IACAA,EAAM3B,SAHR2B,EAIO3B,UAAKyB,OAAL,WACCzB,GACP2B,EAAA3B,UAAAE,IAAA,eAIF0B","file":"global new xhr.js","sourcesContent":["function xhr (reqContent, url, options = {}, callback) {\n  return new Promise((resolve, reject) => {\n    if (typeof options === 'function') callback = options\n    if (typeof options === 'function') options = {}\n    if (options.type == undefined) options.type = 'POST'\n    if (options.contentType == undefined) options.contentType = 'json'\n    var xhr = new XMLHttpRequest()\n    xhr.open(options.type, url, true)\n    if (options.type == 'GET') {\n      xhr.send()\n    } else if (options.contentType == 'form') {\n      xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded')\n      xhr.send('data=' + JSON.stringify(reqContent))\n    } else if (options.contentType == 'json') {\n      xhr.setRequestHeader('Content-type', 'application/json')\n      xhr.send(JSON.stringify(reqContent))\n    } else if (options.contentType == 'none') {\n      xhr.send(reqContent)\n      // for file uploads (multipart/form-data)\n    } else if (options.contentType) {\n      xhr.setRequestHeader('Content-type', options.contentType)\n      xhr.send(reqContent)\n    }\n    xhr.onreadystatechange = function () {\n      if (this.readyState == 4) {\n        let res = JSON.parse(this.responseText)\n        let err = null\n        if (!String(this.status).startsWith('2')) {\n          console.error('HTTP error ' + this.status)\n          err = this.status\n        }\n        if (err) reject(err)\n        else resolve(res)\n        if (callback) callback(res, err)\n      }\n    }\n    // resolve(5);\n  })\n}\nwindow.xhr = xhr\n\nvar YTapiKey = 'AIzaSyBnQnpboWUfWyR8aW6HuQV5MAlxZ5FQ090';\n\n(function Video () {\n  var maxResults = 6\n\n  var url = 'https://www.googleapis.com/youtube/v3/playlistItems' +\n    '?key=' + YTapiKey +\n    '&part=snippet' +\n    '&maxResults=' + maxResults +\n    '&playlistId='\n  var personalURL = url + 'UUy6jcAF6fZGttRvihyQixbA'\n  var commissionsURL = url + 'PL84-DNDSU8p5WP6jA7hvOCV9dIKBNjdCS'\n  var personal = xhr(null, personalURL, { type: 'GET' })\n  var commissions = xhr(null, commissionsURL, { type: 'GET' })\n  Promise.all([personal, commissions]).then((results) => {\n    console.log('==--==--==--> YouTube Personal + Commissions')\n    console.log(results)\n    // combine video and commission responses\n    var items = results[0].items.concat(results[1].items)\n    items.sort(function (a, b) {\n      var dateA = new Date(a.snippet.publishedAt)\n      var dateB = new Date(b.snippet.publishedAt)\n      return dateB - dateA // sort by date ascending\n    })\n    items = items.splice(0, maxResults)\n    for (var i = 0; i < items.length; i++) {\n      var url = items[i].snippet.resourceId.videoId\n      var img = items[i].snippet.thumbnails.high.url\n      var title = items[i].snippet.title\n      var item = document.querySelector('section.video .thumbnails a.item:nth-child(' + (i + 1) + ')')\n      item.setAttribute('href', 'https://www.youtube.com/watch?v=' + url)\n      item.querySelector('img').setAttribute('src', img)\n    }\n    document.querySelector('section.video').classList.remove('hidden')\n  }, (err) => {\n    document.querySelector('section.video').classList.add('removed')\n    console.log('Could not fetch Video YouTube playlistItems')\n    throw Error(err)\n  })\n})();\n\n(function Shrive () {\n  var maxResults = 6\n\n  var url = 'https://www.googleapis.com/youtube/v3/playlistItems' +\n    '?key=' + YTapiKey +\n    '&part=snippet' +\n    '&maxResults=' + maxResults +\n    '&playlistId=UUoMimPRPeR28TM3_0cinjVQ'\n  xhr(null, url, { type: 'GET' }).then((result) => {\n    console.log('==--==--==-->YouTube Shrive')\n    console.log(result)\n    var items = result.items\n    for (var i = 0; i < items.length; i++) {\n      var url = items[i].snippet.resourceId.videoId\n      var img = items[i].snippet.thumbnails.high.url\n      var title = items[i].snippet.title\n      var item = document.querySelector('section.shrive .thumbnails .item:nth-child(' + (i + 1) + ')')\n      item.setAttribute('href', 'https://www.youtube.com/watch?v=' + url)\n      item.querySelector('img').setAttribute('src', img)\n    }\n    document.querySelector('section.shrive').classList.remove('hidden')\n  }, (err) => {\n    document.querySelector('section.shrive').classList.add('removed')\n    console.log('Could not fetch Shrive YouTube playlistItems')\n    throw Error(err)\n  })\n})();\n\n(function Lacuna () {\n  var maxResults = 8\n\n  // Lacuna\n  var clientID = '6ibYZTmF5qnpvp88S9V3werVrC18WCdC'\n  var url = 'https://api.soundcloud.com/users/247370320/tracks' +\n    '?limit=' + maxResults +\n    '&client_id=' + clientID\n  xhr(null, url, { type: 'GET' }).then((tracks) => {\n    console.log('==--==--==--> SoundCloud Lacuna')\n    console.log(tracks)\n    for (var i = 0; i < 6; i++) {\n      var url = tracks[i].permalink_url\n      var img = tracks[i].artwork_url.replace('large', 't300x300')\n      var item = document.querySelector('section.lacuna .thumbnails .item:nth-child(' + (i + 1) + ')')\n      item.setAttribute('href', url)\n      item.querySelector('img').setAttribute('src', img)\n    }\n    document.querySelector('section.lacuna').classList.remove('hidden')\n  }, (err) => {\n    document.querySelector('section.lacuna').classList.add('removed')\n    console.log('Could not fetch SoundCloud tracks')\n    throw Error(err)\n  })\n})();\n\n(function GitHub () {\n  function xxxhr({ method, url, headers, json }) {\n    const req = new XMLHttpRequest()\n    req.open(method, url, true)\n    if (headers) {\n      for (const headerKey in headers) {\n        if (headers.hasOwnProperty(headerKey)) {\n          req.setRequestHeader(headerKey, headers[headerKey])\n        }\n      }\n    }\n    if (json) {\n      req.setRequestHeader('Content-type', 'application/json')\n      req.send(JSON.stringify(json))\n    }\n    xhr.onreadystatechange = function() {\n      if (this.readyState === 4) {\n        const res = JSON.parse(this.responseText)\n        if (String(this.status).startsWith('2')) {\n          if (callback) callback(null, res)\n        } else {\n          if (callback) callback(this.status, res)\n        }\n      }\n    }\n    // function xhr (reqContent, url, options = {}, callback) {\n    //   return new Promise((resolve, reject) => {\n    //     if (typeof options === 'function') callback = options\n    //     if (typeof options === 'function') options = {}\n    //     if (options.type == undefined) options.type = 'POST'\n    //     if (options.contentType == undefined) options.contentType = 'json'\n    //     var xhr = new XMLHttpRequest()\n    //     xhr.open(options.type, url, true)\n    //     if (options.type == 'GET') {\n    //       xhr.send()\n    //     } else if (options.contentType == 'form') {\n    //       xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded')\n    //       xhr.send('data=' + JSON.stringify(reqContent))\n    //     } else if (options.contentType == 'json') {\n    //       xhr.setRequestHeader('Content-type', 'application/json')\n    //       xhr.send(JSON.stringify(reqContent))\n    //     } else if (options.contentType == 'none') {\n    //       xhr.send(reqContent)\n    //       // for file uploads (multipart/form-data)\n    //     } else if (options.contentType) {\n    //       xhr.setRequestHeader('Content-type', options.contentType)\n    //       xhr.send(reqContent)\n    //     }\n    //     xhr.onreadystatechange = function () {\n    //       if (this.readyState == 4) {\n    //         let res = JSON.parse(this.responseText)\n    //         let err = null\n    //         if (!String(this.status).startsWith('2')) {\n    //           console.error('HTTP error ' + this.status)\n    //           err = this.status\n    //         }\n    //         if (err) reject(err)\n    //         else resolve(res)\n    //         if (callback) callback(res, err)\n    //       }\n    //     }\n    //     // resolve(5);\n    //   })\n    // }\n    // window.xhr = xhr\n  }\n  window.xxxhr = xxxhr\n  // this is so babel won't combine the two string into one, and\n  // make GitHub revoke the token when it detects it in the commit\n  let token = '510127accaf075e7a33b'\n  if (true) token += '04e4569c7e2f78c83539'\n  // fetch('https://api.github.com/graphql', {\n  //   body: JSON.stringify({\n  //     query: `\n  //         query {\n  //             user(login:\"SpectralKH\") {\n  //             pinnedRepositories(first:6) {\n  //                 edges {\n  //                 node {\n  //                     description\n  //                     homepageUrl\n  //                     url\n  //                     name\n  //                 }\n  //                 }\n  //             }\n  //             }\n  //         }\n  //     `\n  //   }),\n  //   headers: {\n  //     Authorization: 'bearer ' + token,\n  //     'Content-Type': 'application/x-www-form-urlencoded'\n  //   },\n  //   method: 'POST'\n  // })\n  //   .then((response) => {\n  //     if (response.ok) return response\n  //     else throw Error(response)\n  //   })\n  //   .then((response) => {\n  //     response.json().then((result) => {\n  //       console.log('==--==--==--> GitHub')\n  //       console.log(result.data)\n  //       const repos = result.data.user.pinnedRepositories.edges\n  //       for (var i = 0; i < 6; i++) {\n  //         const repo = repos[i].node\n  //         const description = repo.description\n  //         const repoWebsite = repo.homepageUrl\n  //         const name = repo.name\n  //         const repoUrl = repo.url\n  //         // const img = tracks[i].artwork_url.replace('large', 't300x300')\n  //         const item = document.querySelector('section.github .cards .item:nth-child(' + (i + 1) + ')')\n  //         // item.setAttribute('href', url)\n  //         item.querySelector('p.title').innerHTML = name\n  //         item.querySelector('p.description').innerHTML = description\n  //         if (repoUrl) {\n  //           item.querySelector('a.repo-url').setAttribute('href', repoUrl)\n  //           item.querySelector('a.repo-url').classList.remove('hidden')\n  //         }\n  //         if (repoWebsite) {\n  //           item.querySelector('a.repo-website').setAttribute('href', repoWebsite)\n  //           item.querySelector('a.repo-website').classList.remove('hidden')\n  //         }\n  //       }\n  //       document.querySelector('section.github').classList.remove('hidden')\n  //     })\n  //   })\n  //   .catch((err) => {\n  //     document.querySelector('section.github').classList.add('removed')\n  //     throw err\n  //   })\n})()\n\n// discord/email popups\ndocument.addEventListener('click', function (e) {\n  function hideAllInputs () {\n    var inputs = document.querySelectorAll('a.has-popup input')\n    for (var i = 0; i < inputs.length; i++) {\n      inputs[i].classList.add('hidden')\n    }\n  }\n  var hasClassHasPopup = e.target.classList.contains('has-popup')\n  var hasClassPopup = e.target.classList.contains('popup')\n  if (hasClassHasPopup || hasClassPopup) {\n    var input = e.target.querySelector('input')\n    if (e.target.classList.contains('popup')) input = e.target\n    var clickedInput = e.target.classList.contains('popup')\n    var inputIsHidden = input.classList.contains('hidden')\n    if (inputIsHidden) {\n      hideAllInputs()\n      input.select()\n      input.classList.remove('hidden')\n    } else if (!clickedInput) {\n      input.classList.add('hidden')\n    }\n  } else {\n    // clicked anywhere\n    hideAllInputs()\n  }\n})\n"]}
