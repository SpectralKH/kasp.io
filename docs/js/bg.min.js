"use strict";

function getCanvasContainerWidth() {
  return document.querySelector(".canvas-container").clientWidth;
}function init() {
  camera = new THREE.PerspectiveCamera(75, getCanvasContainerWidth() / canvasHeight, 1, 1e4), camera.position.z = 1e4, scene = new THREE.Scene(), particles = new Array();for (var e = 2 * Math.PI, n = new THREE.SpriteCanvasMaterial({ color: particleColor, program: function program(n) {
      n.beginPath(), n.arc(0, 0, .5, 0, e, !0), n.fill();
    } }), a = 0, i = 0; i < AMOUNTX; i++) {
    for (var t = 0; t < AMOUNTY; t++) {
      particle = particles[a++] = new THREE.Sprite(n), particle.position.x = i * SEPARATION - AMOUNTX * SEPARATION / 2, particle.position.z = t * SEPARATION - AMOUNTY * SEPARATION / 2, scene.add(particle);
    }
  }renderer = new THREE.CanvasRenderer(), renderer.setPixelRatio(window.devicePixelRatio), renderer.setSize(getCanvasContainerWidth(), canvasHeight), container.appendChild(renderer.domElement), window.addEventListener("resize", onWindowResize, !1);
}function onWindowResize() {
  canvasContainerWidth = getCanvasContainerWidth(), windowHalfX = canvasContainerWidth / 2, windowHalfY = canvasHeight / 2, camera.aspect = canvasContainerWidth / canvasHeight, camera.updateProjectionMatrix(), renderer.setSize(canvasContainerWidth, canvasHeight);
}function animate() {
  requestAnimationFrame(animate), render();
}function render() {
  camera.position.set(0, 355, 122);for (var e = 0, n = 0; n < AMOUNTX; n++) {
    for (var a = 0; a < AMOUNTY; a++) {
      particle = particles[e++], particle.position.y = 50 * Math.sin(.3 * (n + count)) + 50 * Math.sin(.5 * (a + count)), particle.scale.x = particle.scale.y = 4 * (Math.sin(.3 * (n + count)) + 1) + 4 * (Math.sin(.5 * (a + count)) + 1);
    }
  }renderer.render(scene, camera), count += .1;
}var canvasHeight = 400,
    SEPARATION = 100,
    AMOUNTX = 80,
    AMOUNTY = 40,
    particleColor = "#3f3f3f",
    container,
    camera,
    scene,
    renderer,
    particles,
    particle,
    count = 0,
    mouseX = 0,
    mouseY = 0;container = document.createElement("div"), container.classList.add("canvas-container"), container.classList.add("hidden"), setTimeout(function () {
  container.classList.remove("hidden");
}, 1e3), document.body.appendChild(container);var windowHalfX = getCanvasContainerWidth() / 2,
    windowHalfY = canvasHeight / 2;init(), animate();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL2JnLm1pbi5qcyJdLCJuYW1lcyI6WyJnZXRDYW52YXNDb250YWluZXJXaWR0aCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNsaWVudFdpZHRoIiwiaW5pdCIsImNhbWVyYSIsIlRIUkVFIiwiUGVyc3BlY3RpdmVDYW1lcmEiLCJjYW52YXNIZWlnaHQiLCJwb3NpdGlvbiIsInoiLCJzY2VuZSIsIlNjZW5lIiwicGFydGljbGVzIiwiQXJyYXkiLCJlIiwiTWF0aCIsIlBJIiwibiIsIlNwcml0ZUNhbnZhc01hdGVyaWFsIiwiY29sb3IiLCJwYXJ0aWNsZUNvbG9yIiwicHJvZ3JhbSIsImJlZ2luUGF0aCIsImFyYyIsImZpbGwiLCJhIiwiaSIsIkFNT1VOVFgiLCJ0IiwiQU1PVU5UWSIsInBhcnRpY2xlIiwiU3ByaXRlIiwieCIsIlNFUEFSQVRJT04iLCJhZGQiLCJyZW5kZXJlciIsIkNhbnZhc1JlbmRlcmVyIiwic2V0UGl4ZWxSYXRpbyIsIndpbmRvdyIsImRldmljZVBpeGVsUmF0aW8iLCJzZXRTaXplIiwiY29udGFpbmVyIiwiYXBwZW5kQ2hpbGQiLCJkb21FbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9uV2luZG93UmVzaXplIiwiY2FudmFzQ29udGFpbmVyV2lkdGgiLCJ3aW5kb3dIYWxmWCIsIndpbmRvd0hhbGZZIiwiYXNwZWN0IiwidXBkYXRlUHJvamVjdGlvbk1hdHJpeCIsImFuaW1hdGUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJyZW5kZXIiLCJzZXQiLCJ5Iiwic2luIiwiY291bnQiLCJzY2FsZSIsIm1vdXNlWCIsIm1vdXNlWSIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJzZXRUaW1lb3V0IiwicmVtb3ZlIiwiYm9keSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxTQUFTQSx1QkFBVCxHQUFrQztBQUFDLFNBQU9DLFNBQVNDLGFBQVQsQ0FBdUIsbUJBQXZCLEVBQTRDQyxXQUFuRDtBQUErRCxVQUFTQyxJQUFULEdB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QUExQztBQUFBLElBQTRDaUQsY0FBWXpDLGVBQWEsQ0FBckUsQ0FBdUVKLFFBQU9nRCxTQUFQIiwiZmlsZSI6ImpzL2JnLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGdldENhbnZhc0NvbnRhaW5lcldpZHRoKCl7cmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FudmFzLWNvbnRhaW5lclwiKS5jbGllbnRXaWR0aH1mdW5jdGlvbiBpbml0KCl7Y2FtZXJhPW5ldyBUSFJFRS5QZXJzcGVjdGl2ZUNhbWVyYSg3NSxnZXRDYW52YXNDb250YWluZXJXaWR0aCgpL2NhbnZhc0hlaWdodCwxLDFlNCksY2FtZXJhLnBvc2l0aW9uLno9MWU0LHNjZW5lPW5ldyBUSFJFRS5TY2VuZSxwYXJ0aWNsZXM9bmV3IEFycmF5O2Zvcih2YXIgZT0yKk1hdGguUEksbj1uZXcgVEhSRUUuU3ByaXRlQ2FudmFzTWF0ZXJpYWwoe2NvbG9yOnBhcnRpY2xlQ29sb3IscHJvZ3JhbTpmdW5jdGlvbihuKXtuLmJlZ2luUGF0aCgpLG4uYXJjKDAsMCwuNSwwLGUsITApLG4uZmlsbCgpfX0pLGE9MCxpPTA7aTxBTU9VTlRYO2krKylmb3IodmFyIHQ9MDt0PEFNT1VOVFk7dCsrKXBhcnRpY2xlPXBhcnRpY2xlc1thKytdPW5ldyBUSFJFRS5TcHJpdGUobikscGFydGljbGUucG9zaXRpb24ueD1pKlNFUEFSQVRJT04tQU1PVU5UWCpTRVBBUkFUSU9OLzIscGFydGljbGUucG9zaXRpb24uej10KlNFUEFSQVRJT04tQU1PVU5UWSpTRVBBUkFUSU9OLzIsc2NlbmUuYWRkKHBhcnRpY2xlKTtyZW5kZXJlcj1uZXcgVEhSRUUuQ2FudmFzUmVuZGVyZXIscmVuZGVyZXIuc2V0UGl4ZWxSYXRpbyh3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbykscmVuZGVyZXIuc2V0U2l6ZShnZXRDYW52YXNDb250YWluZXJXaWR0aCgpLGNhbnZhc0hlaWdodCksY29udGFpbmVyLmFwcGVuZENoaWxkKHJlbmRlcmVyLmRvbUVsZW1lbnQpLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsb25XaW5kb3dSZXNpemUsITEpfWZ1bmN0aW9uIG9uV2luZG93UmVzaXplKCl7Y2FudmFzQ29udGFpbmVyV2lkdGg9Z2V0Q2FudmFzQ29udGFpbmVyV2lkdGgoKSx3aW5kb3dIYWxmWD1jYW52YXNDb250YWluZXJXaWR0aC8yLHdpbmRvd0hhbGZZPWNhbnZhc0hlaWdodC8yLGNhbWVyYS5hc3BlY3Q9Y2FudmFzQ29udGFpbmVyV2lkdGgvY2FudmFzSGVpZ2h0LGNhbWVyYS51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCkscmVuZGVyZXIuc2V0U2l6ZShjYW52YXNDb250YWluZXJXaWR0aCxjYW52YXNIZWlnaHQpfWZ1bmN0aW9uIGFuaW1hdGUoKXtyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYW5pbWF0ZSkscmVuZGVyKCl9ZnVuY3Rpb24gcmVuZGVyKCl7Y2FtZXJhLnBvc2l0aW9uLnNldCgwLDM1NSwxMjIpO2Zvcih2YXIgZT0wLG49MDtuPEFNT1VOVFg7bisrKWZvcih2YXIgYT0wO2E8QU1PVU5UWTthKyspcGFydGljbGU9cGFydGljbGVzW2UrK10scGFydGljbGUucG9zaXRpb24ueT01MCpNYXRoLnNpbiguMyoobitjb3VudCkpKzUwKk1hdGguc2luKC41KihhK2NvdW50KSkscGFydGljbGUuc2NhbGUueD1wYXJ0aWNsZS5zY2FsZS55PTQqKE1hdGguc2luKC4zKihuK2NvdW50KSkrMSkrNCooTWF0aC5zaW4oLjUqKGErY291bnQpKSsxKTtyZW5kZXJlci5yZW5kZXIoc2NlbmUsY2FtZXJhKSxjb3VudCs9LjF9dmFyIGNhbnZhc0hlaWdodD00MDAsU0VQQVJBVElPTj0xMDAsQU1PVU5UWD04MCxBTU9VTlRZPTQwLHBhcnRpY2xlQ29sb3I9XCIjM2YzZjNmXCIsY29udGFpbmVyLGNhbWVyYSxzY2VuZSxyZW5kZXJlcixwYXJ0aWNsZXMscGFydGljbGUsY291bnQ9MCxtb3VzZVg9MCxtb3VzZVk9MDtjb250YWluZXI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxjb250YWluZXIuY2xhc3NMaXN0LmFkZChcImNhbnZhcy1jb250YWluZXJcIiksY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIiksc2V0VGltZW91dChmdW5jdGlvbigpe2NvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpfSwxZTMpLGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTt2YXIgd2luZG93SGFsZlg9Z2V0Q2FudmFzQ29udGFpbmVyV2lkdGgoKS8yLHdpbmRvd0hhbGZZPWNhbnZhc0hlaWdodC8yO2luaXQoKSxhbmltYXRlKCk7Il19
