{"version":3,"sources":["js/global.js"],"names":["xhr","reqContent","url","options","callback","Promise","resolve","reject","undefined","type","contentType","XMLHttpRequest","open","send","setRequestHeader","JSON","stringify","onreadystatechange","readyState","res","parse","responseText","err","String","status","startsWith","console","error","window","YTapiKey","then","result","log","items","i","length","snippet","resourceId","videoId","img","thumbnails","standard","item","document","querySelector","setAttribute","title","classList","remove","Error","add","high","tracks","permalink_url","artwork_url","replace","token","fetch","body","query","headers","Authorization","method","response","ok","json","errors","data","repos","user","pinnedItems","nodes","repo","description","repoWebsite","homepageUrl","name","repoUrl","innerHTML","catch","addEventListener","e","hideAllPopups","iconsWithPopups","querySelectorAll","target","contains","icon","parentNode","range","createRange","popup","selectNodeContents","selection","getSelection","removeAllRanges","addRange"],"mappings":"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","file":"global.ffe0d131.js","sourceRoot":"../src","sourcesContent":["function xhr (reqContent, url, options = {}, callback) {\n  return new Promise((resolve, reject) => {\n    if (typeof options === 'function') callback = options\n    if (typeof options === 'function') options = {}\n    if (options.type == undefined) options.type = 'POST'\n    if (options.contentType == undefined) options.contentType = 'json'\n    var xhr = new XMLHttpRequest()\n    xhr.open(options.type, url, true)\n    if (options.type == 'GET') {\n      xhr.send()\n    } else if (options.contentType == 'form') {\n      xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded')\n      xhr.send('data=' + JSON.stringify(reqContent))\n    } else if (options.contentType == 'json') {\n      xhr.setRequestHeader('Content-type', 'application/json')\n      xhr.send(JSON.stringify(reqContent))\n    } else if (options.contentType == 'none') {\n      xhr.send(reqContent)\n      // for file uploads (multipart/form-data)\n    } else if (options.contentType) {\n      xhr.setRequestHeader('Content-type', options.contentType)\n      xhr.send(reqContent)\n    }\n    xhr.onreadystatechange = function () {\n      if (this.readyState == 4) {\n        let res = JSON.parse(this.responseText)\n        let err = null\n        if (!String(this.status).startsWith('2')) {\n          console.error('HTTP error ' + this.status)\n          err = this.status\n        }\n        if (err) reject(err)\n        else resolve(res)\n        if (callback) callback(res, err)\n      }\n    }\n    // resolve(5);\n  })\n}\nwindow.xhr = xhr\n\nvar YTapiKey = 'AIzaSyBnQnpboWUfWyR8aW6HuQV5MAlxZ5FQ090';\n\n(function Video () {\n  var maxResults = 6\n\n  var url = 'https://www.googleapis.com/youtube/v3/playlistItems' +\n    '?key=' + YTapiKey +\n    '&part=snippet' +\n    '&maxResults=' + maxResults +\n    '&playlistId='\n  var myWork = xhr(null, url + 'PL84-DNDSU8p5WP6jA7hvOCV9dIKBNjdCS', { type: 'GET' })\n  myWork.then((result) => {\n    console.log('==--==--==--> YouTube Video')\n    console.log(result)\n    var items = result.items\n    for (var i = 0; i < items.length; i++) {\n      var url = items[i].snippet.resourceId.videoId\n      // var img = items[i].snippet.thumbnails.high.url\n      var img = items[i].snippet.thumbnails.standard.url\n      // var img = items[i].snippet.thumbnails.maxres.url\n      var item = document.querySelector('section.video .thumbnails a.item:nth-child(' + (i + 1) + ')')\n      item.setAttribute('href', 'https://www.youtube.com/watch?v=' + url)\n      item.querySelector('img').setAttribute('src', img)\n      item.title = items[i].snippet.title // hover title\n    }\n    document.querySelector('section.video').classList.remove('hidden')\n  }, (err) => {\n    document.querySelector('section.video').classList.add('removed')\n    console.log('Could not fetch Video YouTube playlistItems')\n    throw Error(err)\n  })\n})();\n\n(function Shrive () {\n  var maxResults = 6\n\n  var url = 'https://www.googleapis.com/youtube/v3/playlistItems' +\n    '?key=' + YTapiKey +\n    '&part=snippet' +\n    '&maxResults=' + maxResults +\n    '&playlistId=UUoMimPRPeR28TM3_0cinjVQ'\n  xhr(null, url, { type: 'GET' }).then((result) => {\n    console.log('==--==--==-->YouTube Shrive')\n    console.log(result)\n    var items = result.items\n    for (var i = 0; i < items.length; i++) {\n      var url = items[i].snippet.resourceId.videoId\n      var img = items[i].snippet.thumbnails.high.url\n      var item = document.querySelector('section.shrive .thumbnails .item:nth-child(' + (i + 1) + ')')\n      item.setAttribute('href', 'https://www.youtube.com/watch?v=' + url)\n      item.querySelector('img').setAttribute('src', img)\n      item.title = items[i].snippet.title // hover title\n    }\n    document.querySelector('section.shrive').classList.remove('hidden')\n  }, (err) => {\n    document.querySelector('section.shrive').classList.add('removed')\n    console.log('Could not fetch Shrive YouTube playlistItems')\n    throw Error(err)\n  })\n})();\n\n(function Lacuna () {\n  // For example if you specify 10 maxResults, SoundCloud will only respond\n  // with 4 if 6 of them are private\n  var maxResults = 50\n  \n  // Lacuna\n  var clientID = '6ibYZTmF5qnpvp88S9V3werVrC18WCdC'\n  var url = 'https://api.soundcloud.com/users/247370320/tracks' +\n  '?limit=' + maxResults +\n  '&client_id=' + clientID\n  xhr(null, url, { type: 'GET' }).then((tracks) => {\n    console.log('==--==--==--> SoundCloud Lacuna')\n    console.log(tracks)\n    for (var i = 0; i < 6; i++) {\n      var url = tracks[i].permalink_url\n      var img = tracks[i].artwork_url.replace('large', 't500x500')\n      var item = document.querySelector('section.lacuna .thumbnails .item:nth-child(' + (i + 1) + ')')\n      item.setAttribute('href', url)\n      item.querySelector('img').setAttribute('src', img)\n      item.title = tracks[i].title // hover title\n    }\n    document.querySelector('section.lacuna').classList.remove('hidden')\n  }, (err) => {\n    document.querySelector('section.lacuna').classList.add('removed')\n    console.log('Could not fetch SoundCloud tracks')\n    throw Error(err)\n  })\n})();\n\n(function GitHub () {\n  // this is so babel won't combine the two string into one, and\n  // make GitHub revoke the token when it detects it in the commit\n  let token = 'fa60366a80de06de31e5'\n  if (true) token += 'fd3650a203a9b40d625e'\n  fetch('https://api.github.com/graphql', {\n    body: JSON.stringify({\n      query: `\n        query {\n          user(login: \"probablykasper\") {\n            pinnedItems(first:6, types:REPOSITORY) {\n              nodes {\n                ... on Repository {\n                  description\n                  homepageUrl\n                  url\n                  name\n                }\n              }\n            }\n          }\n        }\n      `\n    }),\n    headers: {\n      Authorization: 'bearer ' + token,\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    method: 'POST'\n  })\n    .then((response) => {\n      if (response.ok) return response\n      else throw Error(response)\n    })\n    .then((response) => {\n      response.json().then((result) => {\n        if (result.errors) return console.error('github api error', result.errors)\n        console.log('==--==--==--> GitHub')\n        console.log(result.data)\n        const repos = result.data.user.pinnedItems.nodes\n        for (var i = 0; i < repos.length; i++) {\n          const repo = repos[i]\n          const description = repo.description\n          const repoWebsite = repo.homepageUrl\n          const name = repo.name\n          const repoUrl = repo.url\n          // const img = tracks[i].artwork_url.replace('large', 't300x300')\n          const item = document.querySelector('section.github .cards .item:nth-child(' + (i + 1) + ')')\n          // item.setAttribute('href', url)\n          item.classList.remove('hidden')\n          item.querySelector('p.title').innerHTML = name\n          item.querySelector('p.description').innerHTML = description\n          if (repoUrl) {\n            item.querySelector('a.repo-url').setAttribute('href', repoUrl)\n            item.querySelector('a.repo-url').classList.remove('hidden')\n          }\n          if (repoWebsite) {\n            item.querySelector('a.repo-website').setAttribute('href', repoWebsite)\n            item.querySelector('a.repo-website').classList.remove('hidden')\n          }\n        }\n        document.querySelector('section.github').classList.remove('hidden')\n      })\n    })\n    .catch((err) => {\n      document.querySelector('section.github').classList.add('removed')\n      throw err\n    })\n})()\n\n// discord/email popups\ndocument.addEventListener('click', function (e) {\n  function hideAllPopups () {\n    var iconsWithPopups = document.querySelectorAll('a.has-popup')\n    for (var i = 0; i < iconsWithPopups.length; i++) {\n      iconsWithPopups[i].classList.add('popup-hidden')\n    }\n  }\n\n  if (e.target.classList.contains('has-popup')) {\n    var icon = e.target\n  } else if (e.target.parentNode.classList.contains('has-popup')) {\n    var icon = e.target.parentNode\n  } else {\n    hideAllPopups()\n    return\n  }\n\n  if (icon.classList.contains('popup-hidden')) { // if popup is hidden\n    hideAllPopups()\n\n    // select\n    const range = document.createRange()\n    const popup = icon.querySelector('.popup')\n    range.selectNodeContents(popup)\n    const selection = window.getSelection()\n    selection.removeAllRanges()\n    selection.addRange(range)\n    \n    icon.classList.remove('popup-hidden')\n    \n  } else if (!e.target.classList.contains('popup')) { // if popup wasn't clicked\n  \n    icon.classList.add('popup-hidden')\n\n  }\n\n})\n"]}